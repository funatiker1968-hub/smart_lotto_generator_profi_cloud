import 'dart:convert';
import 'dart:math';
import 'package:http/http.dart' as http';
import '../models/lottery_drawing.dart';
import '../models/lottery_system.dart' as lottery_system; // Alias f체r Import-Konflikt

class LotteryApiService {
  static const _timeout = Duration(seconds: 10);

  // Fallback: Statistische Daten generieren wenn APIs nicht verf체gbar
  static List<LotteryDrawing> _generateFallbackData(String lotteryId, int count) {
    final drawings = <LotteryDrawing>[];
    final system = lottery_system.LotterySystem.getById(lotteryId); // Alias verwenden
    final now = DateTime.now();
    final random = Random();

    for (int i = 0; i < count; i++) {
      final date = now.subtract(Duration(days: 7 * i));
      final numbers = _generateRandomNumbers(
        system.numbersCount, 
        system.minNumber, 
        system.maxNumber,
        random
      );
      
      final extraNumbers = system.extraNumbersCount > 0 
          ? _generateRandomNumbers(
              system.extraNumbersCount,
              system.extraMinNumber, 
              system.extraMaxNumber,
              random
            )
          : <int>[];

      drawings.add(LotteryDrawing(
        lotteryId: lotteryId,
        date: date,
        numbers: numbers,
        extraNumbers: extraNumbers,
      ));
    }

    return drawings;
  }

  static List<int> _generateRandomNumbers(int count, int min, int max, Random random) {
    final numbers = <int>[];

    while (numbers.length < count) {
      final number = random.nextInt(max - min + 1) + min;
      if (!numbers.contains(number)) {
        numbers.add(number);
      }
    }

    numbers.sort();
    return numbers;
  }

  // Haupt-Funktion: Daten f체r alle Lotterien abrufen
  static Future<Map<String, List<LotteryDrawing>>> fetchAllDrawings() async {
    final results = <String, List<LotteryDrawing>>{};

    try {
      results['sayisal_loto'] = _generateFallbackData('sayisal_loto', 30);
      results['lotto_6aus49'] = _generateFallbackData('lotto_6aus49', 20);
      results['eurojackpot'] = _generateFallbackData('eurojackpot', 15);

    } catch (e) {
      // Kompletter Fallback falls alles fehlschl채gt
      results['sayisal_loto'] = _generateFallbackData('sayisal_loto', 30);
      results['lotto_6aus49'] = _generateFallbackData('lotto_6aus49', 20);
      results['eurojackpot'] = _generateFallbackData('eurojackpot', 15);
    }

    return results;
  }
}
